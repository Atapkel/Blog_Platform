version: '3.9'

services:
  web:
    build: .
    command: bash -c "python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py runserver 0.0.0.0:8000"
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/staticfiles
      - .:/app

    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - .env.prod
    networks:
      - practice-network

  nginx:
    image: nginx:stable-alpine3.20-perl
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro  # Use same named volume
    environment:
      - NGINX_USER=www-data  # Add this line

    depends_on:
      - web
    networks:
      - practice-network

  db:
    image: postgres:15.12-alpine3.20
    environment:
      POSTGRES_DB: practice
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - practice-network

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - practice-network

volumes:
  postgres_data:
  minio_data:
  static_volume:

networks:
  practice-network:
